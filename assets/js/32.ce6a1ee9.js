(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{558:function(s,t,e){"use strict";e.r(t);var a=e(26),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"install-gny-blockchain"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-gny-blockchain"}},[s._v("#")]),s._v(" Install GNY Blockchain")]),s._v(" "),e("p",[s._v("Ubuntu 18.04.3 LTS or higher is required!")]),s._v(" "),e("h2",{attrs:{id:"install-linux-dependencies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-linux-dependencies"}},[s._v("#")]),s._v(" Install Linux Dependencies")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('sudo apt-get update\n\nsudo apt-get -y upgrade\n\nsudo apt-get install curl ntp wget git libssl-dev openssl make gcc g++ autoconf automake python build-essential -y\n\nsudo apt-get install libtool libtool-bin -y\n\n# Install nvm\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash\n\n\n# This loads nvm\nexport NVM_DIR="$HOME/.nvm"\n[ -s "$NVM_DIR/nvm.sh" ] && \\. "$NVM_DIR/nvm.sh"\n[ -s "$NVM_DIR/bash_completion" ] && \\. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion\n\nnvm install           # install node version in .nvmrc file\nnvm use               # uses node version in the .nvmrc file\nnvm alias default     # set node version in .nvmrc as default one\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h2",{attrs:{id:"install-docker-and-docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-docker-and-docker-compose"}},[s._v("#")]),s._v(" Install Docker and Docker-Compose")]),s._v(" "),e("blockquote",[e("p",[s._v("Follow "),e("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[s._v("this Tutorial"),e("OutboundLink")],1),s._v(" to install "),e("strong",[s._v("Docker")]),s._v(" and "),e("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[s._v("this Tutorial"),e("OutboundLink")],1),s._v(" to install "),e("strong",[s._v("Docker-Compose")]),s._v(".")])]),s._v(" "),e("br"),s._v(" "),e("h2",{attrs:{id:"clone-repository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone-repository"}},[s._v("#")]),s._v(" Clone Repository")]),s._v(" "),e("p",[s._v("Clone this repository:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/gnyio/gny-experiment gny-experiment "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$_")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"install-dependencies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-dependencies"}},[s._v("#")]),s._v(" Install Dependencies")]),s._v(" "),e("p",[s._v("Install exactly the dependencies from "),e("code",[s._v("package-lock.json")]),s._v(" with "),e("code",[s._v("npm ci")]),s._v(":")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" ci\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"install-sub-packages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-sub-packages"}},[s._v("#")]),s._v(" Install Sub-Packages")]),s._v(" "),e("p",[s._v("Bootstrap all "),e("a",{attrs:{href:"https://github.com/lerna/lerna",target:"_blank",rel:"noopener noreferrer"}},[s._v("lerna.js"),e("OutboundLink")],1),s._v(" packages with:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lerna:bootstrap\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"transpile-typescript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#transpile-typescript"}},[s._v("#")]),s._v(" Transpile TypeScript")]),s._v(" "),e("p",[s._v("Transpile all "),e("a",{attrs:{href:"https://github.com/lerna/lerna",target:"_blank",rel:"noopener noreferrer"}},[s._v("lerna.js"),e("OutboundLink")],1),s._v(" packages with:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lerna:tsc\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"start-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#start-node"}},[s._v("#")]),s._v(" Start Node")]),s._v(" "),e("p",[s._v("Start a postgres docker container:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# start POSTGRESQL database on port 3000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker run --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POSTGRES_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("docker --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POSTGRES_DB")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgres --env "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POSTGRES_USER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgres -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(":5432 postgres:9.6.12\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("Open a new "),e("code",[s._v("console")]),s._v(" and start the GNY blockchain:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("node packages/main/dist/src/app\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("Default ports:")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[s._v("Service")]),s._v(" "),e("th",{staticStyle:{"text-align":"center"}},[s._v("Port")]),s._v(" "),e("th",{staticStyle:{"text-align":"center"}},[s._v("Where to change")])])]),s._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("Postgres")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("3000")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[s._v("ormconfig.json")])])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("Blockchain-API")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("4096")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("code",[s._v("config.json")])])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("Blockchain-P2P")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("4096+1")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("Can't be changed! Always API-Port +1")])])])]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("Attention")]),s._v("\nAfter changing ports be sure to rebuild the project with "),e("code",[s._v("npm run tsc")])])]),s._v(" "),e("br"),s._v(" "),e("h2",{attrs:{id:"extra-run-whole-blockchain-only-in-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extra-run-whole-blockchain-only-in-docker"}},[s._v("#")]),s._v(" Extra: Run whole Blockchain only in Docker")]),s._v(" "),e("p",[s._v("First verify that you executed the "),e("a",{attrs:{href:"#Installation"}},[s._v("Installation")]),s._v(" process.")]),s._v(" "),e("p",[s._v("The following command builds the image for the GNY Blockchain node and the "),e("code",[s._v("postgres")]),s._v(" database:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker-compose build\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("Then start both services:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker-compose up\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"run-tests"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run-tests"}},[s._v("#")]),s._v(" Run Tests")]),s._v(" "),e("p",[s._v("Before running the unit tests be sure to have the project installed with "),e("a",{attrs:{href:"#Installation"}},[s._v("Installation")])]),s._v(" "),e("p",[s._v("To run the unit tests, simple run:")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("To run the integration tests you need to first login as the root user (because of docker):")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" -s\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run test:integration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("br")])}),[],!1,null,null,null);t.default=n.exports}}]);